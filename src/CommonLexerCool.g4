lexer grammar CommonLexerCool;

NEGATE      : '~';
WHILE       : [wW][hH][iI][lL][eE] ;
FALSE       : [f][aA][lL][sS][eE] ;
AT          : '@' ;
CASE        : [cC][aA][sS][eE] ;
CLASS       : [cC][lL][aA][sS][sS] ;
COLON       : ':' ;
COMMA       : ',' ;
DIVIDE      : '/' ;
MUL         : '*' ;
DOT         : '.' ;
ELSE        : [eE][lL][sS][eE] ;
STRING      : '"'([a-zA-Z0-9\\: .!@#$%^-]|'+')*'"' ;
EQUALS      : '=' ;
ESAC        : [eE][sS][aA][cC] ;
NEW         : [nN][eE][wW] ;
FI          : [fF][iI] ;
NOT         : [nN][oO][tT] ;
TRUE        : [t][rR][uU][eE] ;
OF          : [oO][fF] ;
POOL        : [pP][oO][oO][lL] ;
IF          : [iI][fF] ;
IN          : [iI][nN] ;
INHERITS    : [iI][nN][hH][eE][rR][iI][tT][sS] ;
INTEGER     : DIGIT+ ;
ISVOID      : [iI][sS][vV][oO][iI][dD] ;
LBRACE      : '{' ;
LE          : '<=' ;
LET         : [lL][eE][tT] ;
LARROW      : '<-';
LOOP        : [lL][oO][oO][pP] ;
LPAREN      : '(' ;
LT          : '<' ;
MINUS       : '-' ;
RARROW      : '=>' ;
RBRACE      : '}' ;
RPAREN      : ')' ;
SEMI        : ';' ;
THEN        : [tT][hH][eE][nN] ;
TILDE       : [tT][iI][lL][dD][eE] ;
TIMES       : [tT][iI][mM][eE][sS] ;
ID          : (UNDERSCORE | LETTER)(UNDERSCORE | LETTER | DIGIT)* ;
//TYPE        : (UNDERSCORE | LETTER)(UNDERSCORE | LETTER | DIGIT)* ;
LETTER      : [a-zA-Z] ;
DIGIT       : [0-9] ;
UNDERSCORE  : '_' ;
PLUS        : '+' ;
WS          : [ \t\r\n] -> skip;
ERRORCHARACTER: . ;
